package client.example.myclient;


import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.protocol.HTTP;
import java.util.List;

@SpringBootApplication
public class ClientcookieApplication implements CommandLineRunner {

    public static void main(String[] args) {
        SpringApplication.run(ClientcookieApplication.class, args);
    }

    @Override
    public void run(String... args) {
        RestTemplate restTemplate = new RestTemplate(clientHttpRequestFactory());

        // Çerezlerin saklanması için bir HttpHeaders nesnesi
        HttpHeaders headers = new HttpHeaders();

        // 1. Çerez oluşturma isteği
        String setCookieUrl = "http://localhost:8080/set-cookie";
        ResponseEntity<String> setResponse = restTemplate.getForEntity(setCookieUrl, String.class);

        // Sunucudan dönen çerezleri yakalayalım
        List<String> cookies = setResponse.getHeaders().get(HttpHeaders.SET_COOKIE);
        if (cookies != null) {
            cookies.forEach(cookie -> headers.add(HttpHeaders.COOKIE, cookie));
        }
        System.out.println("Response from /set-cookie: " + setResponse.getBody());

        // 2. Çerez okuma isteği
        String getCookieUrl = "http://localhost:8080/get-cookie";
        HttpEntity<String> request = new HttpEntity<>(headers);
        ResponseEntity<String> getResponse = restTemplate.postForEntity(getCookieUrl, request, String.class);
        System.out.println("Response from /get-cookie: " + getResponse.getBody());
    }

    private ClientHttpRequestFactory clientHttpRequestFactory() {
        // HttpClient oluşturma ve yapılandırma
        CloseableHttpClient httpClient = HttpClients.custom()
                .disableCookieManagement() // Eğer Apache HttpClient'in kendi cookie yönetimini kullanmak isterseniz bu satırı kaldırın.
                .build();
        return new HttpComponentsClientHttpRequestFactory(httpClient);
    }
}


